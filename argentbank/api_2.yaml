swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/transactions:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Transactions API
      description: API for fetching user transactions
      parameters:
        - in: query
          name: account
          schema:
            type: string
          description: The kind of transaction to return
      responses:
        "200":
          description: User transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}/category:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Post Transaction Category API
      description: API for posting a category for a transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Category Payload
          required: true
          schema:
            $ref: "#/definitions/CategoryPayload"
      produces:
        - application/json
      responses:
        "200":
          description: Category added successfully
          schema:
            $ref: "#/definitions/CategoryResponse"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Transaction Category API
      description: API for updating a category for a transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Category Payload
          required: true
          schema:
            $ref: "#/definitions/CategoryPayload"
      produces:
        - application/json
      responses:
        "200":
          description: Category updated successfully
          schema:
            $ref: "#/definitions/CategoryResponse"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete Transaction Category API
      description: API for deleting the category of a transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Category deleted successfully
          schema:
            $ref: "#/definitions/CategoryResponse"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
  /user/transactions/{transactionId}/note:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Post Transaction Note API
      description: API for posting a note for a transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Note Payload
          required: true
          schema:
            $ref: "#/definitions/NotePayload"
      produces:
        - application/json
      responses:
        "200":
          description: Note added successfully
          schema:
            $ref: "#/definitions/NoteResponse"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update Transaction Note API
      description: API for updating a note for a transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
        - in: body
          name: body
          description: Note Payload
          required: true
          schema:
            $ref: "#/definitions/NotePayload"
      produces:
        - application/json
      responses:
        "200":
          description: Note updated successfully
          schema:
            $ref: "#/definitions/NoteResponse"
        "400":
          description: Invalid Fields
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Delete Transaction Note API
      description: API for deleting the note of a transaction
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Note deleted successfully
          schema:
            $ref: "#/definitions/NoteResponse"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  CategoryResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          category:
            type: string
  NoteResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          note:
            type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      amount:
        type: number
      type:
        type: string
      category:
        type: string
      note:
        type: string
      account:
        type: string
  CategoryPayload:
    type: object
    properties:
      category:
        type: string
  NotePayload:
    type: object
    properties:
      note:
        type: string
